# melt of rings
# ./xmovie -scale dump.brush
# ./lmp_mac2 < in.brush &
# here N is no of chain and M is no. of monomers
 

units		lj
atom_style	angle
#comm_modify mode single cutoff 2.5
# periodic box in x,y, fixed in z
boundary	p p p 

# input data
read_restart data/indata.lammps
#read_restart restarts/pos.restart2
mass * 1.0
# define group
#group           molecule type 1

# Kremer-Grest: LJ + FENE
pair_style      lj/cut 1.122462048
pair_coeff      * * 1.0 1.0 1.122462048
pair_modify 	shift yes
bond_style      fene
bond_coeff      1 30.0 1.5 1.0 1.0
special_bonds   fene
angle_style     cosine
angle_coeff     1 1.5

neighbor        1.0 bin # is default behavior for lj units
neigh_modify    every 2 delay 0 check yes #suggested is 20 0 no
variable atoms equal atoms

variable volume equal vol 

variable rho1 equal ${atoms}/${volume}

variable scalef equal (${rho1}/0.85)^(0.3333333333333333333333333333)

# Langevin dynamics 
fix		1 all nve
fix             2 all langevin 1.0 1.0 1.0 229139
#build a wall
#variable                                radius equal 45.0-(45.0-27.4446)*(step/10000)
#region                                  nucleus sphere 0.0 0.0 0.0 v_radius side in #10.0 side in #
#fix                                             wall all wall/region nucleus lj126 1.0 1.0 1.122462048

#fix extra all print 100 "rad = ${radius}"

shell mkdir restarts
restart 100 restarts/pos.restart1 restarts/pos.restart2
# run
shell mkdir data_equil_1
dump		1 all custom 1000 data_equil_1/test_pos*.dat id type x y z ix iy iz
log 		data_equil_1/log.dat
timestep        0.01
thermo_style    custom step time temp epair ebond pe etotal density
thermo          100	

group small type 1
group large type 2
group small_mol molecule <> 1 88
group large_mol molecule <> 89 94

compute 1 all msd
compute 2 small msd
compute 3 large msd
compute 4 small_mol gyration
compute 5 large_mol gyration
compute stress_all all stress/atom NULL virial
fix s_all all ave/atom 1 1 1 c_stress_all[4] 
compute		s_all all reduce ave f_s_all 
compute stress_small small stress/atom NULL virial
fix s_small small ave/atom 1 1 1 c_stress_small[4] 
compute	s_small small reduce ave f_s_small 
compute stress_large large stress/atom NULL virial
fix s_large large ave/atom 1 1 1 c_stress_large[4] 
compute	s_large large reduce ave f_s_large 

fix p_time all ave/time 1 1 100 c_s_all c_s_small c_s_large file "./data_equil_1/log.stress"



variable time equal step*dt
variable msd_all equal c_1[4]
variable msd_1 equal c_2[4]
variable msd_2 equal c_3[4]
variable rg_1 equal c_4
variable rg_2 equal c_5
variable st equal step
fix 3 all print 100 "${time} ${msd_all} ${msd_1} ${msd_2} ${rg_1} ${rg_2}" file "./data_equil_1/rg2.txt" screen no title "#rg2"


run             10000000

write_restart   restarts/restart_last.test_pos
write_data   restarts/restart_last.data

